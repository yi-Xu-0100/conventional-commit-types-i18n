name: release
on:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
        with:
          fetch-depth: 0

      - name: Get version from package.json
        uses: actions/github-script@v3.1.0
        id: version
        with:
          result-encoding: string
          script: |
            const version = require(`${process.env.GITHUB_WORKSPACE}/package.json`).version;
            core.setOutput('owner', context.repo.owner);
            core.setOutput('repo', context.repo.repo);
            core.setOutput('version', version);

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          version: ${{steps.version.outputs.version}}
          path: ./CHANGELOG.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.4
        with:
          tag_name: v${{steps.version.outputs.version}}
          release_name: Release v${{steps.version.outputs.version}}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}

      - name: Setup node
        uses: actions/setup-node@v2.1.5
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'
          scope: '@${{ steps.version.outputs.owner }}'

      - name: Setup package
        run: |
          npm install
          npm run build

      - name: Publish package to npmjs
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/setup-node@v2.1.5
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ steps.version.outputs.owner }}'

      - name: Authenticate with the GPR
        run: |
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Publish package to GPR
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
