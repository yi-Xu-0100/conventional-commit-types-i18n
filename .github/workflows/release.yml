name: release
on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0

      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 12
          registry-url: 'https://registry.npmjs.org'
          scope: '@${{ github.repository_owner }}'

      - name: Setup package
        run: |
          npm install
          npm run build

      - name: Bump version
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          git tag | grep -P 'v\d+\.\d+\.\d+-beta.\d+' -o | xargs git tag -d
          npx --no-install standard-version --skip.commit --skip.tag
          sed 's/^### \[/## [/' -i CHANGELOG.md
          npx --no-install prettier --write CHANGELOG.md  --prose-wrap never --ignore-path ./gitignore

      - name: Get version from package.json
        uses: actions/github-script@v5
        id: version
        with:
          result-encoding: string
          script: |
            const { GITHUB_WORKSPACE } = process.env;
            const version = require('./package.json').version;
            core.setOutput('version', version);

      - name: Setup git information
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create commit
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          git add .
          git commit -m "chore(release): ðŸ”– release v${{steps.version.outputs.version}}"

      - name: Create tag
        env:
          VERSION: ${{ steps.version.outputs.version }}
        run: |
          git tag -a v${{env.VERSION}} -m "chore(release): :bookmark: release v${{env.VERSION}}"

      - name: Push release commit
        env:
          REMOTE_URL: https://x-access-token:${{secrets.GITHUB_TOKEN}}@github.com/${{github.repository}}.git
        run: |
          git push --follow-tags "${{env.REMOTE_URL}}"

      - name: Get Changelog Entry
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2.0.0
        with:
          version: ${{steps.version.outputs.version}}
          path: ./CHANGELOG.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version.outputs.version }}
          release_name: Release v${{ steps.version.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: ${{ steps.changelog_reader.outputs.status == 'unreleased' }}

      - name: Publish package to npmjs
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - uses: actions/setup-node@v3
        with:
          node-version: 12
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'

      - name: Authenticate with the GPR
        run: |
          echo "//npm.pkg.github.com:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc

      - name: Publish package to GPR
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
